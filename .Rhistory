a = matrix(1:4,2,2)
obj <- makeCacheMatrix(a)
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinv <- function(inv) m <<- inv
getinv <- function() m
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
## Only thing to add to what was already said... requires calling MASS for ginv for the inverse
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
library(MASS)
m <- x$getinv()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- ginv(data, ...)
x$setinv(m)
m
}
obj <- makeCacheMatrix(a)
inv <- cacheSolve(obj)
inv
a%*%inv
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
dTable(airquality, sPaginationType = "full_numbers")
library(rCharts)
install.packages("rCharts")
library(rCharts)
library(rcharts)
install.packages(c("Rcpp", "httpuv", "shiny"))
library(shiny)
runApp(shinyapp)
getwd()
runApp(shinyapp)
runApp(shinyapp)
runApp("C:\Users\zander\Documents\shinyapp")
runApp("C:\\Users\\zander\\Documents\\shinyapp")
a<-"214907151039761369"
unlist(strsplit(a,""))
as.numeric(unlist(strsplit(a,"")))
plot(hist(as.numeric(unlist(strsplit(a,"")))))
plot(hist(as.numeric(unlist(strsplit(a,""))),binwidth=1))
a<-as.numeric(unlist(strsplit(a,"")))
a<-data.frame(a)
names(a)<-nums
a
names(a)<-"VALUES"
ggplot(data=a, aes(a$VALUES)) + geom_histogram(binwidth=1)
library(ggplot2)
names(a)<-"VALUES"
ggplot(data=a, aes(a$VALUES)) + geom_histogram(binwidth=1)
a<-"2149071510397613692165484765132178957468496846517385176549874964136168476513218765476987987496451512378147534689687496854132176549849459254621345469876354258763984968765476384968746543615649873685421463879687436451321465478798416512136543687654"
a<-as.numeric(unlist(strsplit(a,"")))
a<-data.frame(a)
names(a)<-"VALUES"
ggplot(data=a, aes(a$VALUES)) + geom_histogram(binwidth=1)
?sample
serverRand<-sample(c(0:9),nrow(a),replace=TRUE)
serverRand
serverRand<-data.frame(VALUES=sample(c(0:9),nrow(a),replace=TRUE))
ggplot(data=a, aes(a$VALUES)) + geom_histogram(binwidth=1)
ggplot(data=serverRand, aes(a$VALUES)) + geom_histogram(binwidth=1)
ggplot(data=serverRand, aes(serverRand$VALUES)) + geom_histogram(binwidth=1)
runApp(shinyapp)
runApp("C:\\Users\\zander\\Documents\\shinyapp")
runApp("C:\\Users\\zander\\Documents\\shinyapp")
runApp("C:\\Users\\zander\\SkyDrive\\Documents\\shinyapp")
runApp("C:\\Users\\zander\\SkyDrive\\Documents\\shinyapp")
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
z<-"Enter a really large random number:"
nchar(z)
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
a<-null
a<-NULL
serverRand<-NULL
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
a<-1
serverRand<1
serverRand<-1
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
shiny::runApp('C:/Users/zander/SkyDrive/Documents/shinyapp')
getwd()
setwd("C:\Users\zander\SkyDrive\Documents")
setwd("C:\\Users\\zander\\SkyDrive\\Documents")
runApp(shinyapp)
library(shiny)
runApp(shinyapp)
getwd()
runApp("C:\\Users\\zander\\SkyDrive\\Documents\\shinyapp")
runApp("C:\\Users\\zander\\SkyDrive\\Documents\\shinyapp")
runApp("C:\\Users\\zander\\SkyDrive\\Documents\\shinyapp")
runApp("C:\\Users\\zander\\SkyDrive\\Documents\\shinyapp")
runApp("C:\\Users\\zander\\SkyDrive\\Documents\\shinyapp")
runApp("C:\\Users\\zander\\SkyDrive\\Documents\\shinyapp")
runApp("C:\\Users\\zander\\SkyDrive\\Documents\\shinyapp")
runApp("C:\\Users\\zander\\SkyDrive\\Documents\\shinyapp")
runApp("C:\\Users\\zander\\SkyDrive\\Documents\\shinyapp")
shiny::runApp('shinyapp')
shiny::runApp('shinyapp')
shiny::runApp('shinyapp')
shiny::runApp('shinyapp')
runApp("C:\\Users\\zander\\SkyDrive\\Documents\\shinyapp")
shiny::runApp('shinyapp')
shiny::runApp('shinyapp')
shiny::runApp('shinyapp')
shiny::runApp('shinyapp')
shiny::runApp('shinyapp')
shiny::runApp('shinyapp')
shiny::runApp('shinyapp')
shiny::runApp('shinyapp')
shiny::runApp('shinyapp')
library(devtools)
install.packages(devtools)
library(devtool)
install.packages("devtools")
library(devtools)
install.packages("Rtools")
install_github(slidify)
install_github("slidify")
install_github("slidify",username="roastmoose")
install_github("ramnathv/slidify")
library(slidify)
install.packages("stringr")
install.packages("stringr")
install_github("ramnathv/slidify")
libray(devtools)
library(devtools)
libray(devtools)
install_github("ramnathv/slidify")
update("stringr")
update.packages("stringr")
install_github("ramnathv/slidify")
uninstal.packages("stringr")
uninstall.packages("stringr")
uninstall.package("stringr")
library(utils)
remove.packages("stringr")
install_github("ramnathv/slidify")
install.packages(stringr)
install.packages("stringr")
install.packages("stringr")
ggplot(plotDat,aes(digram,relFrq,fill=origin))+geom_bar(stat="identity",position="dodge")
?multiplot
nchar("132165415521063751068150783610738170639206735207363106107351678516185950967540136520738165768419851073180763810796315706519850763852107651689871905841205173820716510765029156753250732106571096489765106358201763157984785735201635107645703820615809809180718054163754910824192541374194651703510731685416352146854698")
nchar("13216541552106375106815078361073817063920673520736310610735167851618595096754013652073816576841985107318076381079631570651985076385210765168987190584120517382071651076502915675325073210657109648976510635820176315798478573520163510764570382061580980918071805416375491082419254137419465170351073168541635214685469821037852083210765073270169850908498504603270765109084657180372073520735920732061950975817657185207632803270765910685049187496541076827063725106734217352097106157062079859708965417160732065410978541083765216849084719851872076382751036169849107651876819083207392703206485490814079180271817847298415557575810763507382196812873520796410609748907865180732509372164590847098416852710385205276185908479465108327607365248594785210635196410")
nchar("132165415521063751068150783610738170639206735207363106107351678516185950967540136520738165768419851073180763810796315706519850763852107651689871905841205173820716510765029156753250732106571096489765106358201763157984785735201635107645703820615809809180718054163754910824192541374194651703510731685416352146854698210378520832107650732701698509084985046032707651090846571803720735207359207320619509758176571852076328032707659106850491874965410768270637251067342173520971061570620798597089654171607320654109785410837652168490847198518720763827510361698491076518768190832073927032064854908140791802718178472984155575758107635073821968128735207964106097489078651807325093721645908470984168527103852052761859084794651083276073652485947852106351964101703520737206745948507419875016328073927645197816385036720635719207520673514601581975068507638207320975279165851073520795279325073592030732120796356496849878415210231032")
u<-unlist(strsplit("132165415521063751068150783610738170639206735207363106107351678516185950967540136520738165768419851073180763810796315706519850763852107651689871905841205173820716510765029156753250732106571096489765106358201763157984785735201635107645703820615809809180718054163754910824192541374194651703510731685416352146854698210378520832107650732701698509084985046032707651090846571803720735207359207320619509758176571852076328032707659106850491874965410768270637251067342173520971061570620798597089654171607320654109785410837652168490847198518720763827510361698491076518768190832073927032064854908140791802718178472984155575758107635073821968128735207964106097489078651807325093721645908470984168527103852052761859084794651083276073652485947852106351964101703520737206745948507419875016328073927645197816385036720635719207520673514601581975068507638207320975279165851073520795279325073592030732120796356496849878415210231032106879067326093241965749075167208378216549846541051068574685",""))
u
user<-c()
for(i in 1:(nchar(u))){user<-c(user,paste(u[i],u[i+1],collapse="",sep=""))}
for(i in 1:(length(u))){user<-c(user,paste(u[i],u[i+1],collapse="",sep=""))}
install.packages('rsconnect')
library(rsconnect)
install.packages('rsconnect')
